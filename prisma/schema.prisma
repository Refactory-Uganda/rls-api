// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Course {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  Title       String   @unique
  Description String?
  Duration    String
  status      CourseStatus @default(DRAFT)
  createdAt   DateTime @default(now())
  topics      Topic[]  @relation("CourseTopics")
}

model Topic {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  Title       String   @unique
  Description String?
  createdAt   DateTime @default(now())
  courseId    String   @map("_courseId") @db.ObjectId
  Course      Course   @relation(fields: [courseId], references: [id], name: "CourseTopics", onDelete:Cascade)

  Lesson Lesson[]
}

model Lesson {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String // text content
  topic     Topic    @relation(fields: [topicId], references: [id], onDelete:Cascade)
  topicId   String   @db.ObjectId
  quiz      Quiz?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model textContent {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String

  subTitle  subTitle[]
  notes     notes[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model notes {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  notestext   String
  textContent textContent? @relation(fields: [textContentId], references: [id])
  textContentId String?    @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model subTitle {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  subTitle    String
  textContent textContent? @relation(fields: [textContentId], references: [id])
  textContentId String?    @db.ObjectId
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}


model Quiz {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  questions Question[]
  lesson    Lesson     @relation(fields: [lessonId], references: [id], onDelete:Cascade)
  lessonId  String     @unique @db.ObjectId
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Question {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  options   String[] // Array of possible answers
  answer    Int // Index of the correct answer in the options array
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  quizId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


enum CourseStatus {
  DRAFT
  PUBLISHED
}